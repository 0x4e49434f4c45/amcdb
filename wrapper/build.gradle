apply plugin: 'fabric-loom'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings("net.fabricmc:yarn:${yarn_mappings}:v2")

    modImplementation("net.fabricmc:fabric-loader:${loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_version}")

    include("net.dv8tion:JDA:5.0.0-beta.18") {
        exclude module: 'opus-java'
    }
    // JDA dependencies below
    include "com.neovisionaries:nv-websocket-client:2.14"
    include "com.squareup.okhttp3:okhttp:4.12.0"
    include "org.apache.commons:commons-collections4:4.4"
    include "net.sf.trove4j:trove4j:3.0.3"
    include "com.fasterxml.jackson.core:jackson-core:2.16.0"
    include "com.fasterxml.jackson.core:jackson-databind:2.16.0"
    include "org.slf4j:slf4j-api:1.7.36"
    // dependencies of OkHttp 4.12.0
    include "org.jetbrains.kotlin:kotlin-stdlib:1.9.21"
    include "com.squareup.okio:okio:3.6.0"
    // dependency of jackson-databind 2.16.0
    include "com.fasterxml.jackson.core:jackson-annotations:2.16.0"
}

def fabric_subprojects = parent.subprojects.findAll({
    it.name != "wrapper"
})

remapJar {
    outputs.upToDateWhen { false }

    dependsOn(fabric_subprojects.collect {
        it.tasks.remapJar
    })

    doFirst {
        delete fileTree("build/tmp/versions/META-INF/jars")
        copy {
            from {
                fabric_subprojects.collect {
                    it.tasks.remapJar.outputs.files
                }
            }
            into("build/tmp/versions/META-INF/jars")
        }
    }

    from("../LICENSE") {
        rename { "${it}_${archives_base_name}" }
    }
    from("build/tmp/versions")
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": mod_version
    }
}
